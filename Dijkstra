#include<stdio.h>
#include<string.h>
#include<stdlib.h>
typedef struct node{
int num;
struct node *next;
} Node;
void OrientedGraph(void);/**有向图函数 */

void UndirectedGraph(void);/**无向图函数 */
int main(void)
{
int n;
printf("0：有向图\n非0：无向图\n");
scanf("%d",&n);
if(n)
    UndirectedGraph();/**无向图函数 */
else
    OrientedGraph();/**有向图函数 */

}
void OrientedGraph(void)/**有向图函数 */
{
printf("开始生成有向图\n");
int n,m;
while(1){
printf("请输入图的节点数(须大于1)：\n");
scanf("%d",&n);
if(n>1)
    break;
        }
        printf("开始生成%d点有向图\n",n);
        Node *head=NULL;
        Node *p=NULL;
        head=(Node *)calloc(n,sizeof(Node));///分配静态存储空间
        int i=0;
        for(;i<n;i++){
            head[i].next=NULL;
            head[i].num=i+1;
            printf("请依次输入第%d个点出发所指向的目标点的序号，0退出\n",i+1);
            while(1){
                scanf("%d",&m);///输入目标节点的序号
                if(!m)
                    break;
                    p=head[i].next;
                    while(p!=NULL&&p->num!=m)///先查找该边是否已经录入
                        p=p->next;
                    if(p==NULL){
                    p=(Node *)malloc(sizeof(Node));
                    p->num=m;
                    p->next=head[i].next;
                    head[i].next=p;}
                    else
                        printf("该边已存在\n");
            }

        }
}

void UndirectedGraph(void)/**无向图函数 */
{
printf("开始生成无向图\n");
int n,m;
while(1){
printf("请输入图的节点数(须大于1)：\n");
scanf("%d",&n);
if(n>1)
    break;
        }
        printf("开始生成%d点无向图\n",n);
        Node *head=NULL;
        Node *p=NULL;
        head=(Node *)calloc(n,sizeof(Node));///分配静态存储空间
        int i=0;
        for(;i<n;i++){
            head[i].next=NULL;
            head[i].num=i+1;}
            for(i=0;i<n;i++){
            printf("请依次输入第%d个点出发所指向的目标点的序号，0退出\n",i+1);
            while(1){
                scanf("%d",&m);
                if(!m)
                    break;

                        p=head[i].next;
                        while(p!=NULL&&(p->num)!=m)
                        p=p->next;
                        if(p==NULL)///如果该边还没有创建则创建之
                            {
                               p=(Node *)malloc(sizeof(Node));
                    p->num=m;
                    p->next=head[i].next;
                    head[i].next=p;

                            }
                        else
                          printf("该边已存在！\n");





                    if(i<m-1){/**如果目标节点的序号在i之后，说明目标节点处的边还没录入，
                            根据无向图的定义，需要在目标节点处录入相同的边*/
                        p=(Node *)malloc(sizeof(Node));
                        p->num=i+1;
                        p->next=head[m-1].next;
                        head[m-1].next=p;
                    }

            }

        }
}
